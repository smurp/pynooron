
Welcome to PyOKBC
=================

http://www.noosphere.org/software/pyokbc

PyOKBC is a Python implemenation of OKBC (Open Knowledge Base Connectivity).

   High Performance Knowledge Base Connectivity Home Page 
        http://www.ai.sri.com/~okbc/
   OKBC Spec 
        http://www.ai.sri.com/~okbc/spec.html

Motivation:
-----------
The overall goal is to have a single API which can interact with
knowledge or legacy data resources in a uniform fashion, facilitating
interaction of knowledge (or data) from multiple sources and the
creation of generic user interfaces to access knowledge irrespective
of source. This work was begun to support the requirements of Nooron
    http://www.noosphere.org/software/nooron
which provides a flexible web-based user interface for knowledge and
various evolutionary components. Together Nooron and PyOKBC are
intended to create a "self-improving container for self-improving
knowledge".

Directions:
-----------
PyOKBC is an effort to perform a faithful implementation of the OKBC
spec. PyOKBC includes PyKB.py which is a simple Knowledge
Representation System backend accessible through PyOKBC. The goal is
to implement other backends such as:

  NetworkConnection
    interact with lisp or java OKBC servers 
  MySQLKB
    present MySQL databases as knowledge 
  PgKB
    present PostgreSQL databases as knowledge 
  XTMKB
    a Topic Map backend (possibly using Goose) 
  PythonKB
    use introspection to treat arbitrary python objects as knowledge 
  FsKB
    presents file system contents as knowledge with Mime-types as classes 
  CVSKB
    presents CVS contents as versionable knowledge 
  CWMKB
    uses Tim Berners-Lee's Closed World Model package to access RDF 
  BibtexKB
    bibliographic databases as knowledge

Help Solicited:
---------------
Contributing can be relatively easy, because the goal is a faithful 
implementation of the absolutely excellent OKBC Spec.

  - write a backend
  - flesh out the optional okbc methods (there are many not yet
      implemented)
  - oh yeah, and about the mandatory ones...
  - improve (or constructively critique) the quickly hacked together code
  - find bugs
  - help with Nooron



Shawn Murphy <smurp@emergence.com>

$Id: README,v 1.1 2002/10/22 11:23:09 smurp Exp $
