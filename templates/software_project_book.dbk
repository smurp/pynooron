<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!--
  $Revision: 1.4 $
  $Id: software_project_book.dbk,v 1.4 2008/09/13 18:53:18 smurp Exp $
  http://www.docbook.org/tdg/en/html/book.html


  This is just a placeholder for the moment, having nothing of value in it.
  Should be based on what is going on in software_project_overview.html
-->
<tal:dummy replace="python:request.set_header('Content-Type','text/xml')"/>
<article>
    <tal:dummy define="global baseurl python:request.split_uri()[0]"/>
    <articleinfo>
       <title tal:content="python:get_frame_pretty_name(here) or 
                                  get_frame_name(here)"></title>

	<tal:dummy condition="string:">
	<revhistory>
	<revision>
        <date>01 April 2003</date>
	</revision>
	</revhistory>
        </tal:dummy>

       <abstract>
        <para>
           This document is empty because software_project_book.dbk is so rudimentary.
        </para>

        <para><ulink url=""
                 tal:define="url python:server_absolute_url+request.object_request()"
                 tal:attributes="url url"
                 tal:content="url"></ulink></para>
        <para tal:content="python:get_slot_value(here,':DOCUMENTATION')[0] or ''"></para>
       </abstract>

    </articleinfo>


    <tal:dummy 
         define="global pat_slots python:get_slot_values('pattern',
                                                         'slot_display_order',
                                                         slot_type=ALL)[0];
                 global sort_frames python:get_procedure('sort_frames')"/>
    <tal:dummy define="patterns python:call_procedure(sort_frames,
                                  arguments=([get_class_instances('pattern')[0]]))">
       <tal:dummy repeat="pattern patterns">
         <sect1 id="" tal:attributes="id pattern">
            <title tal:content="python:get_frame_pretty_name(pattern) or
                                       get_frame_name(pattern)">pattern</title>
            <para></para>
            <tal:dummy repeat="pat_slot pat_slots">
              <tal:dummy define="global skip_dummy_para string:"/>
	      <sect2 id="" 
                     tal:define="vals python:get_slot_values(pattern,pat_slot)[0]"
                     tal:condition="python: vals and not (len(vals) == 1 and vals[0] == ' ' or vals[0] =='')"
                     tal:attributes="id python:str(pattern)+'-'+str(pat_slot)">

                <title tal:content="pat_slot">pat_slot</title>
                <tal:dummy tal:repeat="val vals">
                   <para 
                     tal:define="isin   python:frame_in_kb_p(val);
                                 ishref python:0 == str(val).find('http')">
                     <tal:dummy define="global skip_dummy_para string:1"/>
                     <tal:dummy condition="python: not isin and not ishref"
                                replace="val"/>
                     <ulink url=""
                        tal:condition="ishref"
                        tal:content="python: get_frame_pretty_name(val) or
                                             get_frame_name(val)"
                        tal:attributes="url val">
                     </ulink>
	             <tal:dummy replace="val" 
                                tal:condition="isin"/>
                   </para>
                   
                </tal:dummy>

              </sect2>

            </tal:dummy>
            <para tal:condition="nothing">intentionally left blank</para>
         </sect1>
       </tal:dummy>
    </tal:dummy>



<metal:block tal:condition="nothing">
http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html


<mediaobject>
   <imageobject>
      <tal:dummy replace="structure string:<imagedata fileref=&quot;/usr/share/texmf/doc/latex/rotating/cat.eps&quot; 
                                           format=&quot;eps&quot;>"/>
   </imageobject>
</mediaobject>


	<date tal:content="python:get_slot_value(here,'ModificationTime')[0]"></date>
  The following code is what I wanted to use
  to make links from one pattern to another
  within a docbook instance.  But... ZPT raised 
  some zany error about:
    "Close tag link should be removed"
  This looks like a bug/mangled feature
  in ZPT where it tries to do some automagic
  stuff with the HTML unary LINK tag.
   (link linkend="booger")youch(/link)
   (link linkend="" 
         tal:condition="isin" 
         tal:content="val" 
         tal:attributes="linkend val")(/link)

</metal:block>

</article>
