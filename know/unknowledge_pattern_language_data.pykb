# -*-mode: python -*-
put_direct_parents(['pattern_language_ontology'])
put_instance_types(current_kb(),['nooron_app_data'])
create_individual('KnownSpace',
                  pretty_name='Known Space',
                  direct_types=['pattern'])
create_individual('Void',
                  pretty_name='Void',
                  direct_types=['pattern'])
create_individual('LinguisticShell',
                  pretty_name='Linguistic Shell',
                  direct_types=['pattern'])
create_individual('NamedVoid',
                  pretty_name='Named Void',
                  direct_types=['pattern'])
create_individual('ProtoSpace',
                  pretty_name='ProtoSpace',
                  direct_types=['pattern'],
                  own_slots=[['Intent', ' The combination of the known space and the void.'],
                             ['RelatedPatterns', 'KnownSpace', 'Void', 'NamedVoid', 'Stuff']
                            ])
create_individual('ExpectedProperties',
                  pretty_name='Expected Properties',
                  direct_types=['pattern'])
create_individual('ExpectationFailure',
                  pretty_name='Expectation Failure',
                  direct_types=['pattern'])
create_individual('AdjacentPossible',
                  pretty_name='Adjacent Possible',
                  direct_types=['pattern'],
                  own_slots=[['Intent', 'That portion of the void which is knowable via the named voids already inside the known space. '],
                             ['References', 'KnownSpace', 'NamedVoid'],
                            ])
create_individual('Stuff',
                  direct_types=['pattern'],
                  own_slots=[['Intent', 'That which is in the known space, including the Named Voids which link to the unknown ']
                             ])
create_individual('SelfDiscovery',
                  pretty_name='Self Discovery',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', 'The process by which a space discovers itself by progressively discovering the values of named voids '],
                             ['Intent', ' '],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', ''],
                             ['Variations', ' '],
                            ])
create_individual('AutocatalyticSpace',
                  pretty_name='Autocatalytic Space',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', 'A space which has the property that adding more stuff creates a larger adjecent possible void. '],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', 'world wide web'],
                             ['RelatedPatterns', 'Stuff', 'Void', 'NamedVoid', 'SelfDiscovery'],
                             ['Variations', ' '],
                            ])
create_individual('Tapestry',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', ' '],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'Garment', 'NamedVoid', 'Stuff', ''],
                             ['Variations', ' '],
                            ])
create_individual('UnknowledgeLoop',
                  pretty_name='Unknowledge Loop',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', 'The process of growing a space by filling named voids, which in turn create more named voids. '],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', ''],
                             ['Variations', ' '],
                            ])
create_individual('Benegnosis',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', 'A way of knowing based on what is positive or strong '],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'Malgnosis', 'SelfDiscovery', 'AutocatalyticSpace', ''],
                             ['Variations', ' '],
                            ])
create_individual('Malgnosis',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', ' A way of knowing based on what is wrong or failing.'],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'Benegnosis', 'SelfDiscovery', 'AutocatalyticSpace', ''],
                             ['Variations', ' '],
                            ])
create_individual('Diachronic',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', ' A perspective based on the flow of time'],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'synchronic', ''],
                             ['Variations', ' '],
                            ])
create_individual('Synchronic',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', ' A perspective based on a snapshot in time'],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', ''],
                             ['Variations', ' '],
                            ])
create_individual('ScaleFreeSpace',
                  pretty_name='Scale Free Space',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', """A space in which connectivity between elements (points) is not constant.  Some points may be highly interconnected,
                             while others are less connected, according to a power law."""],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', ''],
                             ['Variations', ' '],
                            ])
create_individual('StackedScales',
                  pretty_name='Stacked Scales',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', """A perspective of looking at a system along a continuum of scales, for example, looking at health
                             from the perspective of the molecule, gene, cell, organ, immune system, person, family, community, nation, species."""],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', ''],
                             ['Variations', ' '],
                            ])
create_individual('Intrinsic',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', ' A scale-independent property'],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'StackedScale', 'ScaleFreeSpace', ''],
                             ['Variations', ' '],
                            ])
create_individual('ProtoBrowser',
                  pretty_name='ProtoSpace Browser',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', ' '],
                             ['Consequences', ' '],
                             ['Intent', """ A means of viewing a space, based on a perspective of a browser which is able to apply different garment to
                             the objects under view."""],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', ' '],
                             ['References', ''],
                             ['RelatedPatterns', 'ProtoSpace', 'Intrinsic', 'ScaleFreeSpace', 'StackedScale'],
                             ['Variations', ' '],
                            ])
create_individual('UnknowledgePool',
                  pretty_name='Unknowledge Pool',
                  direct_types=['pattern'],
                  own_slots=[['AKA', ''],
                             ['Applicability', 'The Wiki protocol is an example of this.  For example, a WikiWord can be entered onto a page, which then appears with a question mark after it.  The user has created a NamedVoid.  This appears in the UnknowledgePool until it is filled in.  The progress of the word, first as unknown and later as known, is tracked as part of the diachronic perspective of the system.', ''],
                             ['Consequences', ''],
                             ['Intent', 'The is a collection of the NamedVoids which have been created in WITTy conversation, representing expressions of those things which are unknown.  Pattern weavers may use this pool to find MissingNothings which can then be used to create or refine patterns.  Significant NamedVoids may be collected into a Tapestry, showing the interplay of that which is known and that which is unknown.', ''],
                             ['KnownUses', ''],
                             ['Method', ''],
                             ['Motivation', 'The pool allows discoure to proceed, naming voids to be filled in later.', ''],
                             ['References', ''],
                             ['RelatedPatterns', 'Tapestry', 'NamedVoid', 'KnownSpace', 'Diachronic', 'AdjacentPossible', 'LinguisticShell', 'UnknowledgeLoop'],
                             ['Variations', ''],
                            ])

