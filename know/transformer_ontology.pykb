
# Transformer contributes to the nooron_app_architecture, but how does
# it relate to nooron_app_wardrobes?
#put_direct_parents(['nooron_app_architecture'])
#put_instance_types(current_kb(),['nooron_app_ontology'])

create_slot('AcceptsType',pretty_name='Accepts Type',
            own_slots=[[':DOMAIN','NooronTransformer'],
                       [':SLOT-VALUE-TYPE',':CLASS']],
            #[':SLOT-VALUE-TYPE','(union MimeType :CLASS)']],            
            doc="""This is the type of the input which the transformer
            is capable of transforming, such as :KB, :FRAME,
            nooron_app, pattern_language_app, application/postscript,
            etc.""")

create_slot('AcceptsExtension',pretty_name='Accepts Extension',
            own_slots=[[':DOMAIN','NooronTransformer']],
            doc="""This is the list of file extensions (including
            the preceding dots[?]) which this .""")

create_slot('ApplicableTransformers',pretty_name='Applicable Transformers',
            own_slots=[[':DOMAIN','FileExtension']],
            doc="""These are the NooronTransformers which are applicable
            to the associated FileExtension.""")

create_slot('LiteralExtension',pretty_name='Literal Extension',
            own_slots=[[':DOMAIN','FileExtension']],
            doc="""These are the actual strings which are the
            equivalent extensions represented by the associated
            FileExtension instance.""")

create_slot('MimeType',pretty_name='MimeType',
            own_slots=[[':DOMAIN','NooronTransformer']],
            doc="""This is the mimetype of the associated
            FileExtension.""")

create_slot('EmitsExtension',pretty_name='Emits Extension',
            own_slots=[[':DOMAIN','NooronTransformer']],
            doc="""This is the list of file extensions (including
            the preceding dots[?]) which this .""")

create_slot('LiteralExternalCommand',pretty_name='Literal External Command',
            own_slots=[[':DOMAIN','ExternalCommand']],
            doc="""This is the actual command string which
            can be used to perform the transformation..""")

create_slot('RequiresPrograms',pretty_name='Requires Program',
            own_slots=[[':DOMAIN','ExternalCommand']],
            doc="""This is a list of the programs which must
            exist for this transformer to be able to work.""")

create_class('transformer_class',
             direct_types=['nooron_app_class'],
             doc="""This is the superclass of all classes in the
             pattern_language_ontology.  It might not be very useful...
             YAGNI (you aren't going to need it) suggest that it be
             removed.""")

create_class('FileExtension',
             direct_types=['transformer_class'],
             template_slots=['MimeType',
                             'LiteralExtension',
                             'ApplicableTransformers'],
	     doc="""Instances of FileExtension represent extension-mimetype
             mappings and include references to the NooronTransformers
             which are applicable to this type in the
             ApplicableTransformers slot..""")

create_class('NooronTransformer',
             direct_types=['transformer_class'],
             template_slots=[],
	     doc="""Subclasses of transformer are any kind
             of thing which transforms something from one
             representation to another.  Garments, Okbc PROCEDUREs
             and external commands are all examples..""")

create_class('ExternalCommand',
             direct_types=['transformer_class'],
             direct_superclasses=['NooronTransformer'],
             template_slots=[['AcceptsExtension'],
                             ['EmitsExtension'],
                             ['RequiresProgram'],
                             ['LiteralExternalCommand'],],
             doc="""ExternalCommands are wrappers for unix pipeline
             commands which accept standard input and emit standard
             output.""")

create_class('SinkCommand',
             direct_types=['transformer_class'],
             direct_superclasses=['ExternalCommand'],
             doc="""SinkCommands are wrappers for unix programs
             which consume standard input but produce no output.""")

